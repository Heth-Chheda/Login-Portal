@model LoginPortalApp.Models.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-5 col-md-7 col-sm-9">
            <div class="card shadow-lg border-0 rounded-4">
                <!-- Card Header -->
                <div class="card-header bg-black bg-gradient-primary text-white text-center py-4 rounded-top">
                    <h3 class="mb-0">@ViewData["Title"]</h3>
                    <p class="mb-0 small">Welcome back! Please log in to continue.</p>
                </div>

                <!-- Card Body -->
                <div class="card-body p-4">
                    <form id="loginForm" asp-action="Login" method="post" class="needs-validation" novalidate>
                        <!-- Email Input -->
                        <div class="form-group mb-4">
                            <label for="Email" class="form-label">Email</label>
                            <input asp-for="Email" class="form-control" id="Email" type="email" placeholder="Enter your email" required />
                            <span id="emailError" class="text-danger"></span> <!-- Error message for email -->
                        </div>

                        <!-- Password Input -->
                        <div class="form-group mb-4 position-relative">
                            <label for="Password" class="form-label">Password</label>
                            <input asp-for="Password" class="form-control" id="Password" type="password" placeholder="Enter your password" required />
                            <span id="passwordError" class="text-danger"></span> <!-- Error message for password -->
                            <!-- Password Visibility Toggle -->
                            <button type="button" id="toggle-password" class="btn btn-link position-absolute end-0 top-50 translate-middle-y" style="right: 15px;">
                                <i id="password-icon" class="bi bi-eye-slash"></i>
                            </button>
                        </div>

                        <!-- Remember Me and Forgot Password -->
                        <div class="form-group d-flex justify-content-between align-items-center mb-4">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="RememberMe" />
                                <label class="form-check-label" for="RememberMe">Remember me</label>
                            </div>
                            <a href="@Url.Action("ForgotPassword", "ForgotPassword")" class="text-primary small text-decoration-none">Forgot Password?</a>
                        </div>

                        <!-- Submit Button -->
                        <div class="d-grid">
                            <button type="submit" class="btn btn-gradient-primary py-2 shadow-sm border-primary">
                                Login
                            </button>
                        </div>
                    </form>
                </div>

                <!-- Card Footer -->
                <div class="card-footer text-center py-3">
                    <p class="mb-1 small">
                        Don't have an account?
                        <a href="/Registration/Register" class="text-primary fw-bold text-decoration-none">Register here</a>.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Toggle password visibility
            $('#toggle-password').on('click', function () {
                const passwordField = $('#Password');
                const icon = $('#password-icon');

                if (passwordField.attr('type') === 'password') {
                    passwordField.attr('type', 'text');
                    icon.removeClass('bi-eye-slash').addClass('bi-eye');
                } else {
                    passwordField.attr('type', 'password');
                    icon.removeClass('bi-eye').addClass('bi-eye-slash');
                }
            });

            // Dynamically adjust the position of the toggle button based on input height
            const adjustTogglePosition = () => {
                const passwordFieldHeight = $('#Password').outerHeight();
                const buttonHeight = $('#toggle-password').outerHeight();
                const topPosition = (passwordFieldHeight - buttonHeight) / 2;
                $('#toggle-password').css('top', topPosition + 'px');
            };

            // Call the adjust position function initially and on window resize
            adjustTogglePosition();

            // Replacing jQuery resize with native JavaScript event listener
            window.addEventListener('resize', adjustTogglePosition);

            // Form validation for email
            $("#loginForm").validate({
                rules: {
                    Email: {
                        required: true,
                        email: true
                    },
                    Password: {
                        required: true
                    }
                },
                messages: {
                    Email: {
                        required: "Please enter your email.",
                        email: "Please enter a valid email address."
                    },
                    Password: {
                        required: "Please enter your password."
                    }
                }
            });
        });
    </script>
}

<style>
    /* Styling for error messages */
    .text-danger {
        color: #e74c3c; /* Red color for error messages */
        font-size: 0.875rem; /* Smaller font size */
        display: block;
        margin-top: 5px;
    }

    /* Styling for password toggle button */
    #toggle-password {
        background-color: transparent;
        border: none;
        color: #007bff;
        cursor: pointer;
        font-size: 1.2rem;
    }

    /* Adjust button position */
    .position-relative {
        position: relative;
    }
</style>
